# GridStat METplus Configuration

# section heading for [config] variables - all items below this line and
# before the next section heading correspond to the [config] section
[config]

# List of applications to run - only GridStat for this case
PROCESS_LIST = GridStat

# time looping - options are INIT, VALID, RETRO, and REALTIME
# If set to INIT or RETRO:
#   INIT_TIME_FMT, INIT_BEG, INIT_END, and INIT_INCREMENT must also be set
# If set to VALID or REALTIME:
#   VALID_TIME_FMT, VALID_BEG, VALID_END, and VALID_INCREMENT must also be set
LOOP_BY = INIT

# Format of INIT_BEG and INIT_END using % items
# %Y = 4 digit year, %m = 2 digit month, %d = 2 digit day, etc.
# see www.strftime.org for more information
# %Y%m%d%H expands to YYYYMMDDHH
INIT_TIME_FMT = %Y%m%d%H

# Start time for METplus run - must match INIT_TIME_FMT
INIT_BEG = {{cdate}}

# End time for METplus run - must match INIT_TIME_FMT
INIT_END = {{cdate}}

# Increment between METplus runs (in seconds if no units are specified).
# Must be >= 60 seconds.
INIT_INCREMENT = 3600

# List of forecast leads to process for each run time (init or valid)
# In hours if units are not specified
# If unset, defaults to 0 (don't loop through forecast leads)
LEAD_SEQ = {{fhr_list}} 

# Order of loops to process data - Options are times, processes
# Not relevant if only one item is in the PROCESS_LIST
# times = run all wrappers in the PROCESS_LIST for a single run time, then
#   increment the run time and run all wrappers again until all times have
#   been evaluated.
# processes = run the first wrapper in the PROCESS_LIST for all times
#   specified, then repeat for the next item in the PROCESS_LIST until all
#   wrappers have been run
LOOP_ORDER = times

# Verbosity of MET output - overrides LOG_VERBOSITY for GridStat only
#LOG_GRID_STAT_VERBOSITY = 2

#
# Specify the name of the METplus log file.
#
LOG_METPLUS = {LOG_DIR}/{{metplus_log_fn}}
#
# Specify the location and name of the final METplus conf file.
#
METPLUS_CONF = {GRID_STAT_OUTPUT_DIR}/metplus_final.{{metplus_config_fn}}
#
# Location of MET config file to pass to GridStat.
#
GRID_STAT_CONFIG_FILE = {PARM_BASE}/met_config/GridStatConfig_wrapped

# grid to remap data. Value is set as the 'to_grid' variable in the 'regrid' dictionary
# See MET User's Guide for more information
GRID_STAT_REGRID_TO_GRID = FCST
GRID_STAT_REGRID_VLD_THRESH = 0.5
GRID_STAT_REGRID_METHOD = BUDGET
GRID_STAT_REGRID_WIDTH = 2
GRID_STAT_REGRID_SHAPE = SQUARE

#GRID_STAT_INTERP_FIELD = BOTH
#GRID_STAT_INTERP_VLD_THRESH = 1.0
#GRID_STAT_INTERP_SHAPE = SQUARE
#GRID_STAT_INTERP_TYPE_METHOD = NEAREST
#GRID_STAT_INTERP_TYPE_WIDTH = 1

#GRID_STAT_GRID_WEIGHT_FLAG =

#
# Name to identify model (forecast) data in output.
#
# The variable MODEL is recorded in the stat files, and the data in
# these files is then plotted (e.g. using METViewer).  Here, we add a
# suffix to MODEL that identifies the forecast ensemble member.  This
# makes it easier to identify each curve.
#
MODEL = {{vx_fcst_model_name}}_{{ensmem_name}}

FCST_NATIVE_DATA_TYPE = GRIB
#
# Name to identify observation data in output.
#
OBTYPE = {{obtype}}
OBS_NATIVE_DATA_TYPE = GRIB
#
# Value to enter under the DESC column in the output stat file.
#
GRID_STAT_DESC = NA

# List of variables to compare in GridStat - FCST_VAR1 variables correspond
#  to OBS_VAR1 variables
# Note [FCST/OBS/BOTH]_GRID_STAT_VAR<n>_NAME can be used instead if different evaluations
# are needed for different tools

GRID_STAT_MET_CONFIG_OVERRIDES = cat_thresh = [NA]; cnt_thresh = [NA]; cnt_logic = UNION; wind_thresh = [NA]; wind_logic = UNION; ci_alpha = [0.05]; rank_corr_flag = FALSE;
#
# String to search for in the foreast input files for forecast variable
# 1.
#
FCST_VAR1_NAME = {{fieldname_in_fcst_input}}
#
# List of levels to evaluate for forecast variable 1.
#
ACCUM_HH = {{accum_hh}}
FCST_VAR1_LEVELS = A{ACCUM_HH}
FCST_VAR1_OPTIONS = set_attr_lead = "{lead?fmt=%H%M%S}";

OBS_VAR1_OPTIONS = convert(x) = 100.0*x;
#
# List of thresholds to evaluate for each name/level combination for
# forecast variable 1.
#
BOTH_VAR1_THRESH = {{field_thresholds}}
#
# String to search for in the observation input files for observation
# variable 1.
#
OBS_VAR1_NAME = {{fieldname_in_obs_input}}
#
# List of levels to evaluate for observation variable 1.  Must be the
# same length as FCST_VAR1_LEVELS.
#
OBS_VAR1_LEVELS = A{ACCUM_HH}
#
# Time relative to valid time (in seconds) to allow files to be considered
# valid.  Set both BEGIN and END to 0 to require the exact time in the
# filename.  Not used in this example.
#
FCST_GRID_STAT_FILE_WINDOW_BEGIN = 0
FCST_GRID_STAT_FILE_WINDOW_END = 0
OBS_GRID_STAT_FILE_WINDOW_BEGIN = 0
OBS_GRID_STAT_FILE_WINDOW_END = 0

# MET GridStat neighborhood values
# See the MET User's Guide GridStat section for more information
GRID_STAT_NEIGHBORHOOD_FIELD = BOTH

# width value passed to nbrhd dictionary in the MET config file
GRID_STAT_NEIGHBORHOOD_WIDTH = 5

# shape value passed to nbrhd dictionary in the MET config file
GRID_STAT_NEIGHBORHOOD_SHAPE = SQUARE

# cov thresh list passed to nbrhd dictionary in the MET config file
GRID_STAT_NEIGHBORHOOD_COV_THRESH = >=0.5

# Set to true to run GridStat separately for each field specified
# Set to false to create one run of GridStat per run time that
#   includes all fields specified.
GRID_STAT_ONCE_PER_FIELD = False
#
# Set to true if forecast data is probabilistic.
#
FCST_IS_PROB = False
#
# Only used if FCST_IS_PROB is true - sets probabilistic threshold
#
FCST_GRID_STAT_PROB_THRESH = ==0.1

GRID_STAT_OUTPUT_PREFIX = {MODEL}_{{fieldname_in_met_filedir_names}}{ACCUM_HH}h_{OBTYPE}

# Climatology data
#GRID_STAT_CLIMO_MEAN_FILE_NAME =
#GRID_STAT_CLIMO_MEAN_FIELD =
#GRID_STAT_CLIMO_MEAN_REGRID_METHOD =
#GRID_STAT_CLIMO_MEAN_REGRID_WIDTH =
#GRID_STAT_CLIMO_MEAN_REGRID_VLD_THRESH =
#GRID_STAT_CLIMO_MEAN_REGRID_SHAPE =
#GRID_STAT_CLIMO_MEAN_TIME_INTERP_METHOD =
#GRID_STAT_CLIMO_MEAN_MATCH_MONTH =
#GRID_STAT_CLIMO_MEAN_DAY_INTERVAL =
#GRID_STAT_CLIMO_MEAN_HOUR_INTERVAL =

#GRID_STAT_CLIMO_STDEV_FILE_NAME =
#GRID_STAT_CLIMO_STDEV_FIELD =
#GRID_STAT_CLIMO_STDEV_REGRID_METHOD =
#GRID_STAT_CLIMO_STDEV_REGRID_WIDTH =
#GRID_STAT_CLIMO_STDEV_REGRID_VLD_THRESH =
#GRID_STAT_CLIMO_STDEV_REGRID_SHAPE =
#GRID_STAT_CLIMO_STDEV_TIME_INTERP_METHOD =
#GRID_STAT_CLIMO_STDEV_MATCH_MONTH =
#GRID_STAT_CLIMO_STDEV_DAY_INTERVAL =
#GRID_STAT_CLIMO_STDEV_HOUR_INTERVAL =

#GRID_STAT_CLIMO_CDF_BINS = 1
#GRID_STAT_CLIMO_CDF_CENTER_BINS = False
#GRID_STAT_CLIMO_CDF_WRITE_BINS = True

GRID_STAT_MASK_GRID =

# Statistical output types
GRID_STAT_OUTPUT_FLAG_FHO = STAT
GRID_STAT_OUTPUT_FLAG_CTC = STAT
GRID_STAT_OUTPUT_FLAG_CTS = STAT
#GRID_STAT_OUTPUT_FLAG_MCTC = NONE
#GRID_STAT_OUTPUT_FLAG_MCTS = NONE
GRID_STAT_OUTPUT_FLAG_CNT = STAT
#GRID_STAT_OUTPUT_FLAG_SL1L2 = NONE
#GRID_STAT_OUTPUT_FLAG_SAL1L2 = NONE
#GRID_STAT_OUTPUT_FLAG_VL1L2 = NONE
#GRID_STAT_OUTPUT_FLAG_VAL1L2 = NONE
#GRID_STAT_OUTPUT_FLAG_VCNT = NONE
#GRID_STAT_OUTPUT_FLAG_PCT = NONE
#GRID_STAT_OUTPUT_FLAG_PSTD = NONE
#GRID_STAT_OUTPUT_FLAG_PJC = NONE
#GRID_STAT_OUTPUT_FLAG_PRC = NONE
#GRID_STAT_OUTPUT_FLAG_ECLV = BOTH
GRID_STAT_OUTPUT_FLAG_NBRCTC = STAT
GRID_STAT_OUTPUT_FLAG_NBRCTS = STAT
GRID_STAT_OUTPUT_FLAG_NBRCNT = STAT
#GRID_STAT_OUTPUT_FLAG_GRAD = BOTH
#GRID_STAT_OUTPUT_FLAG_DMAP = NONE

# NetCDF matched pairs output file
##GRID_STAT_NC_PAIRS_VAR_NAME =
#GRID_STAT_NC_PAIRS_FLAG_LATLON = FALSE
#GRID_STAT_NC_PAIRS_FLAG_RAW = FALSE
#GRID_STAT_NC_PAIRS_FLAG_DIFF = FALSE
#GRID_STAT_NC_PAIRS_FLAG_CLIMO = FALSE
##GRID_STAT_NC_PAIRS_FLAG_CLIMO_CDP = FALSE
#GRID_STAT_NC_PAIRS_FLAG_WEIGHT = FALSE
#GRID_STAT_NC_PAIRS_FLAG_NBRHD = FALSE
##GRID_STAT_NC_PAIRS_FLAG_FOURIER = FALSE
##GRID_STAT_NC_PAIRS_FLAG_GRADIENT = FALSE
##GRID_STAT_NC_PAIRS_FLAG_DISTANCE_MAP = FALSE
#GRID_STAT_NC_PAIRS_FLAG_APPLY_MASK = FALSE

# NetCDF matched pairs output file
#GRID_STAT_NC_PAIRS_VAR_NAME =
GRID_STAT_NC_PAIRS_FLAG_LATLON = TRUE
GRID_STAT_NC_PAIRS_FLAG_RAW = TRUE
GRID_STAT_NC_PAIRS_FLAG_DIFF = FALSE
GRID_STAT_NC_PAIRS_FLAG_CLIMO = FALSE
#GRID_STAT_NC_PAIRS_FLAG_CLIMO_CDP = FALSE
GRID_STAT_NC_PAIRS_FLAG_WEIGHT = FALSE
GRID_STAT_NC_PAIRS_FLAG_NBRHD = TRUE
#GRID_STAT_NC_PAIRS_FLAG_FOURIER = FALSE
#GRID_STAT_NC_PAIRS_FLAG_GRADIENT = FALSE
#GRID_STAT_NC_PAIRS_FLAG_DISTANCE_MAP = FALSE
GRID_STAT_NC_PAIRS_FLAG_APPLY_MASK = TRUE

# End of [config] section and start of [dir] section.
[dir]
#
# Directory containing observation input to GridStat.
#
OBS_GRID_STAT_INPUT_DIR = {{obs_input_dir}}
#
# Directory containing forecast input to GridStat.
#
FCST_GRID_STAT_INPUT_DIR = {{fcst_input_dir}}
#
# Directory containing climatology mean input to GridStat.  Not used in
# this example.
#
GRID_STAT_CLIMO_MEAN_INPUT_DIR =
#
# Directory containing climatology mean input to GridStat.  Not used in
# this example.
#
GRID_STAT_CLIMO_STDEV_INPUT_DIR =
#
# Directory in which to write output from GridStat.
#
# OUTPUT_BASE apparently has to be set to something; it cannot be left
# to its default value.  But it is not explicitly used elsewhere in this
# configuration file.
#
OUTPUT_BASE = {{output_base}}
GRID_STAT_OUTPUT_DIR = {{output_dir}}
#
# Directory for staging data.
#
STAGING_DIR = {{staging_dir}}

# End of [dir] section and start of [filename_templates] section.
[filename_templates]
#
# Template for observation input to GridStat relative to
# OBS_GRID_STAT_INPUT_DIR.
#
OBS_GRID_STAT_INPUT_TEMPLATE = {{obs_input_fn_template}}
#
# Template for forecast input to GridStat relative to
# FCST_GRID_STAT_INPUT_DIR.
#
FCST_GRID_STAT_INPUT_TEMPLATE = {{fcst_input_fn_template}}
#
# Template for output from GridStat relative to GRID_STAT_OUTPUT_DIR.
#
GRID_STAT_OUTPUT_TEMPLATE =
#
# Template for climatology input to GridStat relative to
# GRID_STAT_CLIMO_MEAN_INPUT_DIR.  Not used in this example.
#
GRID_STAT_CLIMO_MEAN_INPUT_TEMPLATE =
#
# Template for climatology input to GridStat relative to
# GRID_STAT_CLIMO_STDEV_INPUT_DIR.  Not used in this example.
#
GRID_STAT_CLIMO_STDEV_INPUT_TEMPLATE =
#
# Variable used to specify one or more verification mask files for
# GridStat.  Not used for this example.
#
GRID_STAT_VERIFICATION_MASK_TEMPLATE = {MET_INSTALL_DIR}/share/met/poly/CONUS.poly
